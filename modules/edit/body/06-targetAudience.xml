<?xml version="1.0" encoding="UTF-8"?>
<!--node insertions: --><!--missing element insertion: --><!--hints moved to code-table: --><!--saving of all nodes: --><!--schema instatiated: --><!--schema notations added: -->
<div xmlns:e="http://www.asia-europe.uni-heidelberg.de/" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xf="http://www.w3.org/2002/xforms" class="target-audience block-form" tab-id="target-audience" e:dummy="dummy" xlink:dummy="dummy" xml:dummy="dummy">
    <!--DLF/Aquifer: Recommended if applicable-->
    <!--Cluster: hide-->
    <!-- The DLF/Aquifer Implementation Guidelines for Shareable MODS Records recommend the use of at least one targetAudience element when applicable, and a controlled vocabulary when available. This element is repeatable. -->
    <xf:group appearance="full" class="fieldset level-1">
        <div class="join">
            <span class="legend">
                <span class="legend">Target Audiences</span>
                <span class="xforms-help">
                    <span onmouseover="XsltForms_browser.show(this, 'hint', true)" onmouseout="XsltForms_browser.show(this, 'hint', false)" class="xforms-hint-icon"/>
                    <div class="xforms-help-value">
                        <xf:output mediatype="application/xhtml+xml" incremental="true" ref="instance('code-tables')/code-table[code-table-name='hint-code']/items/item[value='targetAudience']/help"/>
                    </div>
                </span>
                <span class="join-button">
                    <xf:trigger ref=".[mods:targetAudience]">
                        <xf:label>+</xf:label>
                        <xf:action ev:event="DOMActivate">
                            <xf:insert nodeset="mods:targetAudience" at="index('targetAudience-repeat')" position="before"/>
                        </xf:action>
                    </xf:trigger>
                </span>
                <span class="join-button">
                    <xf:trigger ref=".[mods:targetAudience]">
                        <xf:label>â€“</xf:label>
                        <xf:action ev:event="DOMActivate">
                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:targetAudience" at="index('targetAudience-repeat')"/>
                        </xf:action>
                    </xf:trigger>
                </span>
            </span>
        </div>

        <!--targetAudience repeat begins-->
        <xf:repeat nodeset="instance('save-data')/mods:targetAudience" id="targetAudience-repeat">
            <!--targetAudience node-add begins-->
            <!--NB: attributes do not work-->
            <xf:group appearance="full" ref=".[not(mods:targetAudience)] | .[not(@altRepGroup)]| .[not(@authority)] | .[not(@authorityURI)] | .[not(@displayLabel)] | .[not(@lang)] | .[not(@xml:lang)] | .[not(@script)] | .[not(@transliteration)] | .[not(@valueURI)]">
                <xf:switch>
                    <xf:case id="targetAudience-add-node-hide">
                        <div class="node-button">
                            <xf:trigger class="add-button">
                                <xf:label class="xforms-group-label-centered">&gt;</xf:label>
                                <xf:toggle case="targetAudience-add-node-unhide" ev:event="DOMActivate"/>
                            </xf:trigger>
                        </div>
                    </xf:case>
                    <xf:case id="targetAudience-add-node-unhide">
                        <div class="node-button">
                            <xf:trigger>
                                <xf:label class="xforms-group-label-centered">&lt;</xf:label>
                                <xf:toggle case="targetAudience-add-node-hide" ev:event="DOMActivate"/>
                            </xf:trigger>
                        </div>
                        <div class="node-adds">
                            <xf:group appearance="full">
                                <xf:trigger ref=".[not(@lang)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add
                                        Language</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:toggle case="targetAudience-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:insert context="." origin="instance('insert-templates')/mods:targetAudience/@lang"/>
                                    </xf:action>
                                </xf:trigger>
                                <xf:trigger ref=".[not(@xml:lang)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add
                                        xml:lang</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:toggle case="targetAudience-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:insert context="." origin="instance('insert-templates')/mods:targetAudience/@xml:lang"/>
                                    </xf:action>
                                </xf:trigger>
                                <xf:trigger ref=".[not(@transliteration)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add
                                        Transliteration</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:toggle case="targetAudience-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:insert context="." origin="instance('insert-templates')/mods:targetAudience/@transliteration"/>
                                    </xf:action>
                                </xf:trigger>
                                <xf:trigger ref=".[not(@script)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add
                                        Script</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:toggle case="targetAudience-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:insert context="." origin="instance('insert-templates')/mods:targetAudience/@script"/>
                                    </xf:action>
                                </xf:trigger>
                                <xf:trigger ref=".[not(@authority)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add
                                        Authority</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:toggle case="targetAudience-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:insert context="." origin="instance('insert-templates')/mods:targetAudience/@authority"/>
                                    </xf:action>
                                </xf:trigger>
                                <xf:trigger ref=".[not(@authorityURI)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add
                                        Authority URI</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:toggle case="targetAudience-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:insert context="." origin="instance('insert-templates')/mods:targetAudience/@authorityURI"/>
                                    </xf:action>
                                </xf:trigger>
                                <xf:trigger ref=".[not(@valueURI)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add
                                        Value URI</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:toggle case="targetAudience-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:insert context="." origin="instance('insert-templates')/mods:targetAudience/@valueURI"/>
                                    </xf:action>
                                </xf:trigger>
                                <xf:trigger ref=".[not(@altRepGroup)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add
                                        Alt Rep Group</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:toggle case="targetAudience-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:insert context="." origin="instance('insert-templates')/mods:targetAudience/@altRepGroup"/>
                                    </xf:action>
                                </xf:trigger>
                                <xf:trigger ref=".[not(@displayLabel)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add Display
                                        Label</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:toggle case="targetAudience-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:insert context="." origin="instance('insert-templates')/mods:targetAudience/@displayLabel"/>
                                    </xf:action>
                                </xf:trigger>
                            </xf:group>
                        </div>
                    </xf:case>
                </xf:switch>
            </xf:group>
            <!--targetAudience node-add ends-->

            <!--targetAudience input begins-->
            <xf:group appearance="full" ref=".[@lang]">
                <xf:select1 ref="./@lang">
                    <xf:label>Language</xf:label>
                    <xf:hint>
                        <p> The language used within Title Information is specified here, if this
                            language is different from the language noted in Language of Resource.
                            The most common languages have been moved to the top of the list. </p>
                    </xf:hint>
                    <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-3-type-sorted-code']/items/item">
                        <xf:label ref="label"/>
                        <xf:value ref="value"/>
                    </xf:itemset>
                </xf:select1>
            </xf:group>
            <!--DLF/Aquifer: NOT RECOMMENDED]-->
            <!--Cluster: omit-->
            <xf:group appearance="full" ref=".[@xml:lang]">
                <xf:select1 ref="./@xml:lang">
                    <xf:label>xml:lang</xf:label>
                    <xf:hint>
                        <p> The language used within Title Information is specified here, if this
                            language is different from the language noted in Language of Resource.
                            xml:lang is used to specify the language used within a field, using
                            specifications in RFC 3066. RFC 3066 uses the two-character ISO 639-1
                            codes along with three-character ISO 639-2 codes for those languages not
                            given in 639-1. </p>
                        <p> The recommendation is not to use xml:lang, but to use the Language. </p>
                    </xf:hint>
                    <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-2-type-short-code']/items/item">
                        <xf:label ref="label"/>
                        <xf:value ref="value"/>
                    </xf:itemset>
                </xf:select1>
            </xf:group>
            <!--DLF/Aquifer: [RECOMMENDED IF APPLICABLE]-->
            <!--Cluster: include-->
            <xf:group appearance="full" ref=".[@type='transliterated']">
                <xf:select1 ref="./@transliteration" selection="open">
                    <xf:label>Transliteration</xf:label>
                    <xf:hint>
                        <p> Transliteration specifies the transliteration (transcription,
                            romanisation) scheme used within Title Information. When specificing the
                            transliteration used, also specify the language employed. There is at
                            present no standard list of transliteration schemes available. If you
                            wish to employ a transliteration on the scheme, please contact
                            <!--contact -->. In general, the Library of Congress transliteration
                            schemes (<!-- NB -->) should be used. If you follow a transliteration
                            scheme authorised by <!--NB-->, choose <!--NB--> as the value and note
                            the language from which the transliteration is made. The following
                            transliteration schemes are authorised by <!--NB-->: Chinese: pinyin
                            Japanese: (modified) Hepburn Korean: <!--NB--> Russian: <!--NB-->
                            Sanskrit: <!--NB--> If you employ a different, but recognised,
                            transliteration scheme, you may have it added to the list. </p>
                    </xf:hint>
                    <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='transliteration-code']/items/item">
                        <xf:label ref="label"/>
                        <xf:value ref="value"/>
                    </xf:itemset>
                </xf:select1>
            </xf:group>
            <!--DLF/Aquifer: [RECOMMENDED IF APPLICABLE]-->
            <!--Cluster: include-->
            <xf:group appearance="full" ref=".[not(@type='transliterated') and ./@script]">
                <xf:select1 ref="./@script">
                    <xf:label>Script</xf:label>
                    <xf:hint>
                        <p> Script specifies the script used within individual fields. The use of
                            Latin script is not noted. "Chinese" is "Han (Simplified Variant)" or
                            "Han (Traditional Variant)". If the two variants are not considered, it
                            is "Han (Hanzi, Kanji, Hanja)", also used for Japanese, Korean and
                            Vietnamese written in Chinese. </p>
                    </xf:hint>
                    <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='script-code']/items/item">
                        <xf:label ref="label"/>
                        <xf:value ref="value"/>
                    </xf:itemset>
                </xf:select1>
            </xf:group>
            <!--DLF/Aquifer: OPTIONAL]]-->
            <!--Cluster: hide-->
            <xf:group appearance="full" ref=".[@authority]">
                <xf:input ref="./@authority" class="text_100">
                    <xf:label>Authority</xf:label>
                    <xf:hint> Hint </xf:hint>
                </xf:input>
            </xf:group>
            <!--DLF/Aquifer: N/A]]-->
            <!--Cluster: hide-->
            <xf:group appearance="full" ref=".[@authorityURI]" class="text_100">
                <xf:input ref="./@authorityURI" selection="open">
                    <xf:label>Authority URI</xf:label>
                    <xf:hint> Hint</xf:hint>
                </xf:input>
            </xf:group>


            <!--DLF/Aquifer: N/A]]-->
            <!--Cluster: hide-->
            <xf:group appearance="full" ref=".[@valueURI]" class="text_100">
                <xf:input ref="./@valueURI">
                    <xf:label>Value URI</xf:label>
                    <xf:hint> Hint </xf:hint>
                </xf:input>
            </xf:group>
            <xf:group appearance="full" ref=".[@displayLabel]">
                <xf:input ref="./@displayLabel" class="text_100">
                    <xf:label>Display Label</xf:label>
                    <xf:hint>
                        <p> Display Label is intended to be used when additional text associated
                            with the title is needed for display. Display Label may be used whenever
                            appropriate to indicate the preferred labeling when displayed.
                            Appropriate cases include titles other than the primary title or
                            subtitle. Include the text preferred and capitalisation, but do not
                            include delimiters such as colons. </p>
                    </xf:hint>
                </xf:input>
            </xf:group>
            <xf:group appearance="full">
                <xf:select1 ref="./@altRepGroup">
                    <xf:label>Alt Rep Group<span class="xforms-help">
                            <span onmouseover="XsltForms_browser.show(this, 'hint', true)" onmouseout="XsltForms_browser.show(this, 'hint', false)" class="xforms-hint-icon"/>
                            <div class="xforms-help-value">
                                <xf:output mediatype="application/xhtml+xml" incremental="true" ref="instance('code-tables')/code-table[code-table-name='hint-code']/items/item[value='altRepGroup']/help"/>
                            </div>
                        </span>
                    </xf:label>
                    <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='altRepGroup-code']/items/item">
                        <xf:label ref="label"/>
                        <xf:value ref="value"/>
                    </xf:itemset>
                </xf:select1>
            </xf:group>
            <!--DLF/Aquifer: Recommended if applicable-->
            <!--Cluster: include-->
            <xf:group appearance="full" ref=".">
                <xf:input ref=".[string-length(@authority)=0]" class="text_50" selection="open">
                    <xf:label>Target Audience</xf:label>
                    <xf:hint>
                        <p> Use Target Audience to describe a group for which a resource is
                            intended. </p>
                    </xf:hint>
                </xf:input>
            </xf:group>
            <!--DLF/Aquifer: Recommended if applicable-->
            <!--Cluster: include-->
            <xf:group appearance="full" ref=".">
                <xf:select1 ref=".[@authority='marctarget']" selection="open">
                    <xf:label>Target Audience</xf:label>
                    <xf:hint>
                        <p> The name of the authoritative list for a controlled value is recorded
                            here. </p>
                    </xf:hint>
                    <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='target-audience-marctarget-code']/items/item">
                        <xf:label ref="label"/>
                        <xf:value ref="value"/>
                    </xf:itemset>
                </xf:select1>
            </xf:group>
            <!--DLF/Aquifer: Recommended if applicable-->
            <!--Cluster: include-->
            <xf:group appearance="full" ref=".">
                <xf:select1 ref=".[@authority='local']" selection="open">
                    <xf:label>Target Audience</xf:label>
                    <xf:hint>
                        <p> The name of the authoritative list for a controlled value is recorded
                            here. </p>
                    </xf:hint>
                    <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='target-audience-local-code']/items/item">
                        <xf:label ref="label"/>
                        <xf:value ref="value"/>
                    </xf:itemset>
                </xf:select1>
            </xf:group>
            <!--targetAudience input ends-->
        </xf:repeat>
        <!--targetAudience repeat ends-->
        <xf:group appearance="full" ref=".[not(mods:targetAudience)]">
            <xf:trigger class="add-button">
                <xf:label class="xforms-group-label-centered">Add Missing Target Audience</xf:label>
                <xf:action ev:event="DOMActivate">
                    <xf:insert nodeset="instance('save-data')/mods:targetAudience" origin="instance('new-instance')/mods:targetAudience"/>
                </xf:action>
            </xf:trigger>
        </xf:group>
    </xf:group>
</div>