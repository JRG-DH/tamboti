<?xml version="1.0" encoding="UTF-8"?>
<!--node insertions: --><!--missing element insertion: --><!--hints revised: OK, except altRepGroup.--><!--hints moved to code-table: --><!--saving of all nodes: --><!--schema instatiated: OK--><!--schema notations added: -->
<div xmlns:e="http://www.asia-europe.uni-heidelberg.de/" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xf="http://www.w3.org/2002/xforms" class="access-condition block-form" tab-id="access-condition" e:dummy="dummy">
    <xf:group appearance="full" class="fieldset level-1">
        <div class="join wide">
            <span class="legend">Access Conditions</span>
            <span class="join-button">
                <xf:trigger ref=".[mods:accessCondition]">
                    <xf:label>+</xf:label>
                    <xf:action ev:event="DOMActivate">
                        <xf:insert nodeset="mods:accessCondition" at="index('accessCondition-repeat')" position="before"/>
                    </xf:action>
                </xf:trigger>
            </span>
            <span class="join-button">
                <xf:trigger ref=".[mods:accessCondition]">
                    <xf:label>â€“</xf:label>
                    <xf:action ev:event="DOMActivate">
                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:accessCondition" at="index('accessCondition-repeat')"/>
                    </xf:action>
                </xf:trigger>
            </span>
            <span class="xforms-hint">
                <span onmouseover="show(this, 'hint', true)" onmouseout="show(this, 'hint', false)" class="xforms-hint-icon"/>
                <div class="xforms-hint-value">
                    <p>Information about restrictions imposed on access to a resource is noted here.</p>
                    <p>Use Access Condition to indicate rights relating to access and use of digital resources. 
                        State clearly any restrictions on use of the digital resource, including explicitly mentioning lack of copyright restrictions when the digital resource is in the public domain. 
                        Also provide contact information for use by end users who wish to require permissions for publication, exhibit, or other types of dissemination.</p>
                    <p>An XLink may be supplied in lieu of or in addition to the content noted in Access Condition. 
                        If, for example, you maintain rights information relating to specific resources on a website, you may provide a URL for that website in lieu of a textual rights statement. 
                        When doing so, you should provide enough textual explanation in Access Condition, along with the URL, to make the purpose of the URL clear to end users.</p>
                    <p> Whenever possible, consider using a standard license such as Creative Commons and/or a rights expression language such as the Open Digital Rights Language (ODRL) specification.</p>
                </div>
            </span>
        </div>
        <xf:repeat nodeset="instance('save-data')/mods:accessCondition" id="accessCondition-repeat">
            <xf:group appearance="full" ref=".[not(@xlink:href)] | .[not(@type)] | .[not(@altRepGroup)] | .[not(@lang)] | .[not(@xml:lang)] | .[not(@script)] | .[not(@transliteration)] | .[not(@displayLabel)]">
                <xf:switch>
                    <xf:case id="extension-add-node-hide">
                        <div class="node-button">
                            <xf:trigger class="add-button">
                                <xf:label>&gt;</xf:label>
                                <xf:toggle case="extension-add-node-unhide" ev:event="DOMActivate"/>
                            </xf:trigger>
                        </div>
                    </xf:case>
                    <xf:case id="extension-add-node-unhide">
                        <div class="node-button">
                            <xf:trigger>
                                <xf:label>&lt;</xf:label>
                                <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                            </xf:trigger>
                        </div>
                        <div class="node-adds">
                            <xf:group appearance="full" ref=".[not(@xlink:href)] | .[not(@type)] | .[not(@altRepGroup)] | .[not(@lang)] | .[not(@xml:lang)] | .[not(@script)] | .[not(@transliteration)] | .[not(@displayLabel)] | .[not(@displayLabel)]">
                                <xf:trigger ref=".[not(@xlink:href)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add XLink</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:insert context="." origin="instance('insert-templates')/mods:accessCondition/@xlink:href"/>
                                    </xf:action>
                                </xf:trigger>
                                <xf:trigger ref=".[not(@type)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add Type</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:insert context="." origin="instance('insert-templates')/mods:accessCondition/@type"/>
                                    </xf:action>
                                </xf:trigger>
                                <xf:trigger ref=".[not(@altRepGroup)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add Alternate Representation Group</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:insert context="." origin="instance('insert-templates')/mods:accessCondition/@altRepGroup"/>
                                    </xf:action>
                                </xf:trigger>
                                <xf:trigger ref=".[not(@lang)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add Language</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:insert context="." origin="instance('insert-templates')/mods:accessCondition/@lang"/>
                                    </xf:action>
                                </xf:trigger>
                                <xf:trigger ref=".[not(@xml:lang)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add xml:lang</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:insert context="." origin="instance('insert-templates')/mods:accessCondition/@xml:lang"/>
                                    </xf:action>
                                </xf:trigger>
                                <xf:trigger ref=".[not(@script)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add Script</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:insert context="." origin="instance('insert-templates')/mods:accessCondition/@script"/>
                                    </xf:action>
                                </xf:trigger>
                                <xf:trigger ref=".[not(@transliteration)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add Transliteration</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:insert context="." origin="instance('insert-templates')/mods:accessCondition/@transliteration"/>
                                    </xf:action>
                                </xf:trigger>
                                <xf:trigger ref=".[not(@displayLabel)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add Display Label</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:insert context="." origin="instance('insert-templates')/mods:accessCondition/@displayLabel"/>
                                    </xf:action>
                                </xf:trigger>
                            </xf:group>
                        </div>
                    </xf:case>
                </xf:switch>
            </xf:group>
            <xf:group appearance="full" ref=".[@xlink:href]">
                <xf:input ref="./@xlink:href" class="text_50">
                    <xf:label>XLink</xf:label>
                    <xf:hint>
                        <p> The XLink field is used to reference an external resource, such as a second metadata record, a Related Item or a Table Of Contents. </p>
                        <p>An XLink may be supplied in lieu of or in addition to the content noted in Access Condition. 
                            If, for example, you maintain rights information relating to specific resources on a website, you may provide a URL for that website in lieu of a textual rights statement. 
                            When doing so, you should provide enough textual explanation in Access Condition, along with the URL, to make the purpose of the URL clear to end users. </p>
                    </xf:hint>
                </xf:input>
            </xf:group>
            <xf:group appearance="full" ref=".[@type]">
                <xf:select1 ref="./@type" selction="open">
                    <xf:label>Type</xf:label>
                    <xf:hint>
                        <p>Use the type attribute to indicate the type of restrictions (or lack thereof) on use of the resource and/or restrictions on access to the material.</p>
                        <p>There is no controlled list of types for Access Condition. Suggested values are: "restriction on access" and "use and reproduction". 
                            Choose the value appropriate or enter a type of your own. </p>
                    </xf:hint>
                    <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='access-condition-type-code']/items/item">
                        <xf:label ref="label"/>
                        <xf:value ref="value"/>
                    </xf:itemset>
                </xf:select1>
            </xf:group>
            <xf:group appearance="full" ref=".[@lang]">
                <xf:select1 ref="./@lang">
                    <xf:label>Language</xf:label>
                    <xf:hint>
                        <p> This field is used to specify the language used within individual fields, using the codes from ISO 639-2/b. </p>
                        <p>If you have entered a value for Cataloging Language (the default value is "English"), there is no need to note the language used here, unless it is different from that entered in Cataloging Language.</p>
                    </xf:hint>
                    <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-3-type-sorted-code']/items/item">
                        <xf:label ref="label"/>
                        <xf:value ref="value"/>
                    </xf:itemset>
                </xf:select1>
            </xf:group>
            <xf:group appearance="full" ref=".[@xml:lang]">
                <xf:select1 ref="./@xml:lang">
                    <xf:label>xml:lang</xf:label>
                    <xf:hint>
                        <p> This field is used to specify the language used within a field, using specifications in RFC 3066. RFC 3066 uses the two-character ISO 639-1 codes along with three-character ISO 639-2 codes for those languages not given in 639-1. </p>
                        <p> The recommendation is not to use xml:lang, but to use Language. </p>
                    </xf:hint>
                    <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-2-type-code']/items/item">
                        <xf:label ref="label"/>
                        <xf:value ref="value"/>
                    </xf:itemset>
                </xf:select1>
            </xf:group>
            <xf:group appearance="full" ref=".[@script]">
                <xf:select1 ref="./@script">
                    <xf:label>Script</xf:label>
                    <xf:hint>
                        <p> This field specifies the script used within individual fields, using codes from ISO 15924 (Code for the representation of names of scripts). </p>
                        <p>If you have entered a value for Cataloging Script (the default value is "Latin"), there is no need to note the script used here, unless it is different from that entered in Cataloging Script.</p>
                    </xf:hint>
                    <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='script-code']/items/item">
                        <xf:label ref="label"/>
                        <xf:value ref="value"/>
                    </xf:itemset>
                </xf:select1>
            </xf:group>
            <xf:group appearance="full" ref=".[@transliteration]">
                <xf:select1 ref="./@transliteration" selection="open">
                    <xf:label>Transliteration</xf:label>
                    <xf:hint>
                        <p> It specifies the transliteration scheme used within individual fields. There is no standard list of transliteration schemes available, although one may be developed. </p>
                        <p>If you have entered a value for Transliteration Scheme, there is no need to note the transliteration used here, unless it is different from that entered in Transliteration Scheme.</p>
                    </xf:hint>
                    <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='transliteration-code']/items/item">
                        <xf:label ref="label"/>
                        <xf:value ref="value"/>
                    </xf:itemset>
                </xf:select1>
            </xf:group>
            <xf:group appearance="full" ref=".[@displayLabel]">
                <xf:input ref="./@displayLabel" class="text_50">
                    <xf:label>Display Label</xf:label>
                    <xf:hint>
                        <p> Use this field when additional text associated with the main field is needed for display purposes.</p>
                    </xf:hint>
                </xf:input>
            </xf:group>
            <!-- What is altRepGroup used for in accessCondition? -->
            <xf:group appearance="full" ref=".[@altRepGroup]">
                <xf:input ref="./@altRepGroup" class="text_10">
                    <xf:label>Alternate Representation Group</xf:label>
                    <xf:hint>
                        <p>altRepGroup</p>
                    </xf:hint>
                </xf:input>
            </xf:group>
            <div class="hr-small"/>
            <xf:group appearance="full" ref=".">
                <xf:textarea ref="." class="textarea">
                    <xf:label>Access Condition</xf:label>
                    <xf:hint>
                        <p>Information about restrictions imposed on access to a resource is noted here.</p>
                        <p>Use Access Condition to indicate rights relating to access and use of digital resources. 
                            State clearly any restrictions on use of the digital resource, including explicitly mentioning lack of copyright restrictions when the digital resource is in the public domain. 
                            Also provide contact information for use by end users who wish to require permissions for publication, exhibit, or other types of dissemination.</p>
                        <p>An XLink may be supplied in lieu of or in addition to the content noted in Access Condition. 
                            If, for example, you maintain rights information relating to specific resources on a website, you may provide a URL for that website in lieu of a textual rights statement. 
                            When doing so, you should provide enough textual explanation in Access Condition, along with the URL, to make the purpose of the URL clear to end users.</p>
                        <p> Whenever possible, consider using a standard license such as Creative Commons and/or a rights expression language such as the Open Digital Rights Language (ODRL) specification.</p>
                    </xf:hint>
                </xf:textarea>
            </xf:group>
            <div class="hr"/>
        </xf:repeat>
        <xf:group appearance="full" ref=".[not(mods:accessCondition)]">
            <xf:trigger class="add-button">
                <xf:label class="xforms-group-label-centered">Add Missing Access Condition</xf:label>
                <xf:action ev:event="DOMActivate">
                    <xf:insert nodeset="instance('save-data')/mods:accessCondition" origin="instance('new-instance')/mods:accessCondition"/>
                </xf:action>
            </xf:trigger>
        </xf:group>
    </xf:group>
</div>